{"version":3,"sources":["components/nav/index.js","components/pages/wrapper/index.js","components/pages/header/index.js","components/pages/title/index.js","components/pages/contentWrap/index.js","components/pages/home/search/index.js","components/pages/home/submit/index.js","utils/API.js","components/pages/home/host/index.js","components/pages/home/bookrow/index.js","components/pages/home/modal/index.js","components/pages/home/container/index.js","components/pages/saved/header/index.js","components/pages/saved/bookRow/index.js","components/pages/saved/container/index.js","App.js","serviceWorker.js","index.js"],"names":["NavTabs","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","to","window","location","pathname","Wrapper","props","children","Header","Jumbotron","TitleImage","ContentWrap","SearchBar","Object","assign","placeholder","Submit","API","getBooks","query","axios","get","params","q","saveBook","book","post","getSavedBooks","deleteBooks","delete","Host","Bookrow","src","image","alt","title","author","description","target","rel","href","link","Modal","modalclass","HomeContainer","state","books","modalClass","checkInput","event","value","_this","setState","checkQuery","preventDefault","search","toLowerCase","replace","then","res","data","handleBooks","catch","err","console","log","i","length","savedBook","postBook","volumeInfo","imageLinks","thumbnail","authors","infoLink","closeModal","checkImage","_this2","this","wrapper","home_modal","onClick","pages_header","pages_contentWrap","home_search","onChange","home_submit","home_host","map","home_bookrow","key","React","Component","SectionTitle","BookRow","SavedContainer","loadBooks","deleteBook","saved_header","saved_bookRow","_id","App","components_nav","react_router","exact","path","component","Home","Saved","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5329b83.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './nav.css';\r\n\r\nfunction NavTabs() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light my-nav-bar\">\r\n            <h3>React Books</h3>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav nav-link-host\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active bold-link\" : \"nav-link\"} id=\"my-link\">\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/saved\" className={window.location.pathname === \"/saved\" ? \"nav-link active bold-link\" : \"nav-link\"} id=\"my-link\">\r\n                            Saved Books\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavTabs;","import React from 'react';\r\n\r\nfunction Wrapper(props) {\r\n    return (\r\n        <div className=\"container\">{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport './header.css';\r\nimport {Jumbotron} from \"reactstrap\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <Jumbotron className=\"title-host\">{props.children}</Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction TitleImage() {\r\n    return (\r\n        <h1 className=\"title text-center\">Let us help find the book that you need</h1>\r\n    );\r\n}\r\nexport default TitleImage;","import React from 'react';\r\nimport './contentWrap.css';\r\n\r\nfunction ContentWrap(props) {\r\n    return (\r\n        <div className=\"content-host\">{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default ContentWrap;\r\n","import React from 'react';\r\nimport './search.css';\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <form className=\"form-host\">\r\n            <div className=\"form-group\">\r\n                <label>Search Books:</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" {...props} placeholder=\"Your Search\"></input>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport './submit.css';\r\n\r\nfunction Submit(props) {\r\n    return (\r\n        <div className=\"submit-host\">\r\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" {...props}>Submit</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Submit;","import axios from \"axios\";\r\n\r\nexport default {\r\n  getBooks: function(query) {\r\n    return axios.get(\"/api/books\", { params: { q: query } });\r\n  },\r\n\r\n  saveBook: function(book) {\r\n    return axios.post(\"/api/save\", book);\r\n  },\r\n  getSavedBooks: function() {\r\n    return axios.get(\"/api/getsaved\");\r\n  },\r\n  deleteBooks: function(id) {\r\n    return axios.delete(\"/api/delete/\" + id);\r\n  }\r\n};","import React from 'react';\r\nimport './host.css';\r\n\r\nfunction Host(props) {\r\n    return (\r\n        <div className=\"container book-host\">{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Host;","import React from 'react';\r\nimport './bookrow.css';\r\n\r\nfunction Bookrow(props) {\r\n    return (\r\n        <div className=\"row book-row\">\r\n            <div className=\"col-md-12 book-col\">\r\n                <img className=\"image\" src={props.image} alt=\"book-thumbnail\"></img>\r\n                <h1 className=\"title\">{props.title}</h1>\r\n                <h3 className=\"author-head\">Author:</h3>\r\n                <h3 className=\"author\">{props.author}</h3>\r\n                <br></br>\r\n                <h3 className=\"descript-head\">Description:</h3>\r\n                <p className=\"description\">{props.description}</p>\r\n                <br></br>\r\n                <h3 className=\"descript-head\">Learn More:</h3>\r\n                <a className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\r\n                <br></br>\r\n                <button type=\"button\" {...props} className=\"btn btn-outline-primary save-btn\">Save</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bookrow;","import React from 'react';\r\nimport './modal.css';\r\n\r\nfunction Modal(props) {\r\n    return (\r\n        <div id=\"myModal\" className={props.modalclass}>\r\n            <div className=\"modal-content\">\r\n                <span className=\"close\" {...props}>&times;</span>\r\n                <div className=\"modal-text\">\r\n                    <h1 className=\"title text-center\">{props.title}</h1>\r\n                    <h3 className=\"message text-center\">Saved to your books</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport Wrapper from '../../wrapper';\r\nimport Header from '../../header';\r\nimport TitleImage from '../../title';\r\nimport ContentWrap from '../../contentWrap';\r\nimport SearchBar from '../search';\r\nimport Submit from '../submit';\r\nimport API from \"../../../../utils/API\";\r\nimport Host from '../host';\r\nimport Bookrow from '../bookrow';\r\nimport Modal from '../modal';\r\n\r\nclass HomeContainer extends React.Component {\r\n\r\n    state = {\r\n        query: \"\",\r\n        books: [],\r\n        modalClass: \"no-modal\",\r\n        title: \"\"\r\n    }\r\n\r\n    checkInput = event => {\r\n        const {value} = event.target;\r\n        this.setState({ query: value});\r\n    }\r\n\r\n    checkQuery = event => {\r\n        event.preventDefault();\r\n        const search = this.state.query.toLowerCase().replace(/ +/g, \"\");\r\n        API.getBooks(search)\r\n            .then(res => this.setState({ books: res.data }, this.handleBooks))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleBooks = () => {\r\n        console.log(this.state.books);\r\n    }\r\n\r\n    saveBook = id => {\r\n        \r\n        for (let i = 0; i < this.state.books.length; i++) {\r\n            let savedBook = this.state.books[i];\r\n            if (id === savedBook.id) {\r\n                this.postBook(savedBook);\r\n            }\r\n        }\r\n    }\r\n\r\n    postBook = book => {\r\n        API.saveBook({\r\n            image: book.volumeInfo.imageLinks.thumbnail,\r\n            title: book.volumeInfo.title,\r\n            author: book.volumeInfo.authors[0],\r\n            description: book.volumeInfo.description,\r\n            link: book.volumeInfo.infoLink\r\n        }).then(data => {\r\n            this.setState({\r\n                modalClass:\"modal\",\r\n                title: data.data.title\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ modalClass: \"no-modal\" });\r\n    }\r\n\r\n    checkImage = image => {\r\n        if(image === \"undefined\") {\r\n            return \"#\";\r\n        } else {\r\n            return image;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <Modal \r\n                modalclass={this.state.modalClass}\r\n                title={this.state.title}\r\n                onClick={this.closeModal}\r\n                />\r\n                <Header>\r\n                    <TitleImage />\r\n                </Header>\r\n                    <ContentWrap>\r\n                        <SearchBar \r\n                        value={this.state.query}\r\n                        onChange={this.checkInput}\r\n                        />\r\n                    <Submit \r\n                    onClick={this.checkQuery}\r\n                    />\r\n                    <Host>\r\n                    {this.state.books.map(book => {\r\n                        return (\r\n                            <Bookrow \r\n                            key={book.id}\r\n                            image={this.checkImage(book.volumeInfo.imageLinks.thumbnail)}\r\n                            title={book.volumeInfo.title}\r\n                            author={book.volumeInfo.authors[0]}\r\n                            description={book.volumeInfo.description}\r\n                            link={book.volumeInfo.infoLink}\r\n                            onClick={() => this.saveBook(book.id)}\r\n                            >                           \r\n                            </Bookrow>\r\n                        );\r\n                    })}\r\n                    </Host>\r\n                    </ContentWrap>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport './header.css';\r\n\r\nfunction SectionTitle() {\r\n    return (\r\n        <h1 className=\"text-center title\">Saved Books</h1>\r\n    );\r\n}\r\n\r\nexport default SectionTitle;","import React from 'react';\r\nimport './bookRow.css';\r\n\r\nfunction BookRow(props) {\r\n    return (\r\n        <div className=\"row book-row\">\r\n        <div className=\"col-md-12 book-col\">\r\n            <img className=\"image\" src={props.image} alt=\"book-thumbnail\"></img>\r\n            <h1 className=\"title\">{props.title}</h1>\r\n            <h3 className=\"author-head\">Author:</h3>\r\n            <h3 className=\"author\">{props.author}</h3>\r\n            <br></br>\r\n            <h3 className=\"descript-head\">Description:</h3>\r\n            <p className=\"description\">{props.description}</p>\r\n            <br></br>\r\n            <h3 className=\"descript-head\">Learn More:</h3>\r\n            <a className=\"link\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>{props.link}</a>\r\n            <br></br>\r\n            <button type=\"button\" {...props} className=\"btn btn-outline-primary save-btn\">Delete Book</button>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default BookRow;","import React from 'react';\r\nimport Wrapper from '../../wrapper';\r\nimport Header from '../../header';\r\nimport TitleImage from '../../title';\r\nimport Host from '../../home/host';\r\nimport SectionTitle from '../header';\r\nimport BookRow from '../bookRow';\r\nimport API from '../../../../utils/API';\r\n\r\nclass SavedContainer extends React.Component {\r\n    \r\n    state = {\r\n        books: [],\r\n        modalClass: \"no-modal\",\r\n        title: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadBooks();\r\n    }\r\n\r\n    loadBooks = () => {\r\n        API.getSavedBooks().then(books => {\r\n            this.setState({ books: books.data });\r\n        });\r\n    }\r\n\r\n    deleteBook = id => {\r\n\r\n        API.deleteBooks(id).then(() => {\r\n            this.loadBooks();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <Header>\r\n                    <TitleImage />\r\n                </Header>\r\n                <SectionTitle />\r\n                    <Host>\r\n                    {this.state.books.map(book => {\r\n                        return (\r\n                            <BookRow \r\n                            key={book._id}\r\n                            image={book.image}\r\n                            title={book.title}\r\n                            author={book.author}\r\n                            description={book.description}\r\n                            link={book.link}\r\n                            onClick={() => this.deleteBook(book._id)}\r\n                            >                           \r\n                            </BookRow>\r\n                        );\r\n                    })}\r\n                    </Host>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SavedContainer;","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport NavTabs from './components/nav';\r\nimport Home from './components/pages/home/container';\r\nimport Saved from './components/pages/saved/container';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <NavTabs />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/saved\" component={Saved} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}